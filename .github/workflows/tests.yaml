name: 'Run Testing Suite'

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  test-suite:
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ] # , 'windows-latest', 'macos-latest' ]
        python_version: [ '3.10' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Setup cmake
        run: |
          sudo apt-get install -y cmake doxygen graphviz gcovr llvm
      - name: Cache spidermonkey build
        id: cache-spidermonkey
        uses: actions/cache@v3
        with:
          path: |
            ./build/*
            ./firefox-102.2.0/*
      - name: Build-Library
        if: ${{ steps.cache-spidermonkey.outputs.cache-hit != 'true' }}
        run: |
          echo "Building SpiderMonkey"
          #install rust compiler
          wget -q https://ftp.mozilla.org/pub/firefox/releases/102.2.0esr/source/firefox-102.2.0esr.source.tar.xz
          tar xf firefox-102.2.0esr.source.tar.xz
          cd firefox-102.2.0/js/src
          cp ./configure.in ./configure
          chmod +x ./configure
          mkdir _build
          cd _build
          ../configure --disable-jemalloc --with-system-zlib --with-intl-api --enable-optimize
          make
          make install
          cd ../../../..
          echo "Building the library"
          mkdir build
          cd build
          cmake ..
          cmake --build .
          echo "Build complete"
      - name: google-tests
        run: |
          cd firefox-102.2.0/js/src/_build
          make install
          cd ../../../../build
          make && make tests
          gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml
          cd tests && ctest
      - name: google-tests-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          path: ./build/coverage.xml

